<Start> ::= <preprocessing> '#' 'SA* ' <algorithm> | 'SA* ' <algorithm>



<preprocessing> ::=  <imputation> | <bounding> | <dimensionality> | <binarizer> |
    <imputation> '#' <bounding> |
    <imputation> '#' <binarizer> |
    <imputation> '#' <dimensionality> |
    <bounding> '#' <dimensionality> |
    <imputation> '#' <bounding> '#' <dimensionality>

<imputation> ::= 'Imputer' <strategy_imp>

<binarizer> ::= 'Binarizer' <threshold_bin>

<bounding> ::= 'Normalizer' <norm> | 'MinMaxScaler' | 'MaxAbsScaler' |
    'RobustScaler' <boolean> <boolean> | 'StandardScaler' <boolean> <boolean>

<dimensionality> ::= <feature_selection> | <feature_construction> | <feature_selection> '#' <feature_construction>

<feature_selection> ::= 'VarianceThreshold' |
    'SelectKBest' <features> <score_function> |
    'SelectPercentile' <percentile> <score_function> |
    'SelectFpr' <value_rand_1> <score_function> |
    'SelectFwe' <value_rand_1> <score_function> |
    'SelectFdr' <value_rand_1> <score_function> |
    'RFE' <featuresToSelect> <value_rand_1> |
    'RecursiveFE_CV' <cv_rfe> <scoring_rfe> <value_rand_1> |
    'SelectFromModel' <threshold_sfm> <boolean> |
    'IncrementalPCA' <boolean> <featuresToSelect> |
    'TraditionalPCA' <boolean> <featuresToSelect> |
    'FastICA' <algorithm_fastica> <funct> <max_iter_fastica> <tol> <boolean> <featuresToSelect> |
    'GaussianRandomProjection' <value_rand_1> <featuresToSelect> |
    'SparseRandomProjection' <density> <boolean> <value_rand_1> <featuresToSelect> |
    'FeatureAgglomeration' <affinity> <boolean> <featuresToSelect> |
    'RBFSampler' <gamma_kernelApprox> <featuresToSelect> |
    'Nystroem' <kernel> <gamma_kernelApprox> <degree_1>  <coef0> <featuresToSelect>

<feature_construction> ::=   'PolynomialFeatures' <degree_1>  <boolean> <boolean>



<algorithm> ::= <strong> | <weak>

<strong> ::= <Trees> | <NaiveBayes> | <SVM>

<Trees> ::= 'ExtraTreeClassifier' <criterion>  <splitter>  <class_weight>  <presort> <max_features>  <max_depth>  <min_weight_fraction_leaf>  <max_leaf_nodes>  |
    'DecisionTreeClassifier' <criterion>  <splitter>  <class_weight>  <presort> <max_features>  <max_depth>  <min_weight_fraction_leaf>  <max_leaf_nodes> |
    'AdaBoostClassifier' <algorithm_ada> <n_estimators> <learning_rate_ada> |
    'GradientBoostingClassifier' <loss_gradient>  <tol>  <value_rand_1>  <presort> <n_estimators>  <boolean> <max_features>  <max_depth>  <min_weight_fraction_leaf>  <max_leaf_nodes> |
    'RandomForestClassifier' <criterion>  <bootstrap_and_oob> <class_weight_Trees> <n_estimators>  <boolean> <max_features>  <max_depth>  <min_weight_fraction_leaf>  <max_leaf_nodes> |
    'ExtraTreesClassifier' <criterion>  <bootstrap_and_oob> <class_weight_Trees> <n_estimators>  <boolean> <max_features>  <max_depth>  <min_weight_fraction_leaf>  <max_leaf_nodes>

<NaiveBayes> ::= 'GaussianNB' |
    'BernoulliNB' <value_rand_1> <alpha>  <boolean>|
    'MultinomialNB' <alpha>  <boolean>

<SVM> ::= 'SVC' <C>  <kernel>  <degree_1>  <gamma>  <coef0>  <boolean>  <boolean>  <decision_function_shape>  <tol>  <max_iter>  <class_weight> |
    'NuSVC' <nu>  <kernel>  <degree_1>  <gamma>  <coef0>  <boolean>  <boolean>  <decision_function_shape>  <tol>  <max_iter>  <class_weight>

<weak> ::= <nearest> | <discriminant> | <generalized>

<nearest> ::= 'KNeighborsClassifier' <k> <weights> <k_algorithm> <leaf_size>  <p> <d_metric> |
    'RadiusNeighborsClassifier' <radius> <weights> <k_algorithm> <leaf_size>  <p> <d_metric>|
    'CentroidClassifier' <shrinking_threshold> <d_metric>

<discriminant> ::= 'LinearDiscriminantAnalysis' <solver_discrim> <tol>  <boolean>|
    'QuadraticDiscriminantAnalysis' <value_rand_1> <tol>  <boolean>

<generalized> ::= <logistic> | <passive> | <gradient_options> | <ridge>

<logistic> ::= 'LogisticRegression' <boolean> <C> <intercept_scaling> <max_iter_lr>  <solver_lr_options> <boolean>  <tol> |
    'LogisticCV' <Cs>  <cv>  <refit> <intercept_scaling> <max_iter_lr>  <solver_lr_options> <boolean>  <tol>

<gradient_options> ::= 'Perceptron' <penalty> <alpha> <boolean> <n_iter> <boolean> <value_rand1> <class_weight> <boolean> |
    'SGDClassifier' <loss_sgd>  <value_rand1> <value_rand1> <learning_rate_sgd> <power_t> <average> <penalty> <alpha> <boolean> <n_iter> <boolean> <value_rand1> <class_weight> <boolean>

<passive> ::= 'PassiveAggressive ' <C> <boolean> <n_iter> <boolean> <loss_sgd> <boolean> <class_weight>

<ridge> ::= 'RidgeClassifier' <max_iter> <boolean> <solver_ridge> <tol> <alpha> <class_weight> <boolean> <boolean> |
    'RidgeCCV' <cv> <alpha> <class_weight> <boolean> <boolean>

##ATRIBUTES DEFINITION
<strategy_imp> ::= 'mean' | 'median' | 'most_frequent'
<threshold_bin> ::= 'RANDFLOAT(0.000001,100)'
<norm> ::= 'l1'| 'l2' | 'max'
<boolean> ::= 'True' | 'False'
<value_rand_1> ::= 'RANDFLOAT(0.0,1.0)'
<score_function> ::= 'f_classif' | 'chi2'
<percentile> ::= 'RANDINT(5,95)'
<features> ::= 'RANDINT(2,3)'
<featuresToSelect> ::= 'RANDINT(1,3)'
<threshold_sfm> ::= 'None' | 'median' | 'mean' | 'RANDFLOAT(0.0,1.0)'
<algorithm_fastica> ::= 'parallel' | 'deflation'
<funct> ::= 'logcosh' | 'exp' | 'cube'
<max_iter_fastica> ::= '10' | '100' | '250' | '500' | '750' | '1000' | '1500' | '2000' | '2500' | '5000'
<max_iter_lr> ::= '10' | '100' | '150' | '300' | '350' | '400' | '450' |'500'
<max_iter> ::= '10' | '100' | '500' | '1000' | '2500' | '5000' | '7500' | '10000' | '15000' | '20000' | '25000' | '30000' | '50000' | '100000'
<tol> ::= 'RANDFLOAT(0.0000000001,0.1)'
<nu> ::= 'RANDFLOAT(0.0000000001, 1.0)'
<density> ::= 'auto' | 'RANDFLOAT(0.00001,1.0)'
<affinity> ::= 'euclidean' <linkage_type0>| <affinity_options> <linkage_type1>
<affinity_options> ::= 'l1' | 'l2' | 'manhattan' | 'cosine'
<linkage_type0> ::= 'ward' | <linkage_type1>
<linkage_type1> ::= 'complete' | 'average'
<gamma_kernelApprox> ::= 'RANDFLOAT(0.000030518,8.0)'
<degree_1>  ::= 'RANDINT(2,10)'
<coef0> ::= 'RANDFLOAT(0.0,1000.0)'
<kernel> ::= 'linear' | 'poly' | 'rbf'| 'sigmoid'
<criterion> ::= 'entropy' | 'gini'
<splitter> ::= 'best' | 'random'
<class_weight> ::= 'balanced' | 'None'
<presort> ::= 'True' | 'False' | 'auto'
<max_features> ::= 'RANDFLOAT(0.01,1.0)' | 'sqrt' | 'log2' | 'None'
##Depend on the number of features:
<max_depth> ::= 'RANDINT(1,100000)' | 'None'
<min_weight_fraction_leaf> ::= 'RANDFLOAT(0.0,0.5)'
##Depend on the number of features:
<max_leaf_nodes> ::= 'RANDINT(2,100000)' | 'None'
<algorithm_ada> ::= 'SAMME.R' | 'SAMME'
<n_estimators> ::=  '5' | '10' | '15' | '20' | '25' | '30' | '35' | '40' | '45' | '50'
<learning_rate_ada> ::= 'RANDFLOAT(0.01,2.0)'
<loss_gradient> ::= 'deviance' | 'exponential'
<alpha> ::= 'RANDFLOAT(0.0,9.0)'
<c_value> ::= 'RANDFLOAT(0.03125,32768.0)'
<gamma> ::= 'RANDFLOAT(0.000030518,8.0)' | 'auto'
<decision_function_shape> ::= 'ovo' | 'ovr' | 'None'
<k> ::= 'RANDINT(1,30)'
<weights> ::= 'uniform' | 'distance'
<k_algorithm> ::= 'auto' | 'brute' | 'kd_tree' | 'ball_tree'
<leaf_size> ::= 'RANDINT(5,100)'
<shrinking_threshold> ::= 'RANDFLOAT(0.0, 30.0)' | 'None'
<d_metric> ::= 'euclidean' |'manhattan' |'chebyshev' | 'minkowski'
<p> ::= 'RANDINT(1,15)'
<solver_discrim> ::= 'svd' | 'lsqr'
<intercept_scaling> ::= 'RANDFLOAT(0.0,100.0)'
<solver_lr_options> ::= <solver_lr_opt1> <class_weight> <multi_class_lr>| <solver_lr_opt2> 'ovr'
<solver_lr_opt1> ::= 'newton-cg l2 False'| 'lbfgs l2 False'
<solver_lr_opt2> ::= 'liblinear' <penalty_lr> 'None' | 'sag l2 False' <class_weight>
<penalty_lr> ::= 'l1 False' | 'l2' <boolean>
<multi_class_lr> ::= 'ovr' | 'multinomial'
<penalty> ::= 'l1' | 'l2'
<n_iter> ::= '5' | '10' | '25' | '50' | '100' | '250' | '500' | '750'
<loss_sgd> ::= 'hinge'| 'log'| 'modified_huber'| 'squared_hinge'| 'perceptron'| 'squared_loss'| 'huber'| 'epsilon_insensitive'| 'squared_epsilon_insensitive'
<power_t> ::= 'RANDFLOAT(0.1, 5.0)'
<learning_rate_sgd> ::= 'constant'| 'invscaling' | 'optimal'
<average> ::= 'True' | 'False' | 'RANDINT(1,100)'
<solver_ridge> ::= 'auto' | 'svd' | 'cholesky' | 'lsqr' | 'sparse_cg' | 'sag'
<cv> ::= 'RANDINT(2,10)' | 'None'
<cv_rfe> ::= '2' | '3' | '5' | '10'
<scoring_rfe> ::= 'mean_absolute_error' | 'mean_squared_error' | 'median_absolute_error' | 'r2' | 'None'
