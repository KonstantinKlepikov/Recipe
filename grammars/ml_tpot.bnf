<Start> ::= <preprocessing> '#' <algorithm> | <algorithm>

<preprocessing> ::=  <bounding> | <dimensionality> | <binarizer> | <bounding> '#' <dimensionality>


<binarizer> ::= 'Binarizer' <threshold_bin>
<threshold_bin> ::= 'RANDFLOAT(0.000001,100)'

<bounding> ::= 'Normalizer' <norm> | <scaler>
<scaler> ::= 'MinMaxScaler' | 'MaxAbsScaler' | 'RobustScaler' | 'StandardScaler'
<norm> ::= 'l1'| 'l2' | 'max'


<dimensionality> ::= <feature_selection> | <feature_construction> | <feature_selection> '#' <feature_construction>

<feature_selection> ::=  <supervised> | <unsupervised>

<supervised> ::= 'VarianceThreshold' <tshld> | <filter_univariate> | <fromModels>
<tshld> ::= 'RANDFLOAT(0.000001,100.0)'
<filter_univariate> ::= 'SelectKBest' <features> | 'SelectPercentile' <percentile> | 'SelectFwe' <alpha_value>
<k_skb> ::= 'RANDINT(1,100)'
<alpha_value> ::= 'RANDFLOAT(0.01, 0.05)'
<percentile> ::= 'RANDINT(1,99)'

<fromModels> ::= 'RFE' <features>  <step> 'SVC' |  'SelectFromModel' <threshold_sfm> <fromModelsEstimators>>
<fromModelsEstimators> ::= 'ETR' | 'ETC'
<step> ::= 'RANDFLOAT(0.1,0.99)'
<threshold_sfm> ::= 'RANDFLOAT(0.0,1.0)'


<unsupervised> ::=   <CA> | <feature_agglom> | <KernelApproximation>
<CA> ::= 'RandomizedPCA' <iterated_power> | 'FastICA' <tol>
<iterated_power> ::= 'RANDINT(1,10)'
<tol> ::= 'RANDFLOAT(0.0001,100.0)'

<feature_agglom> ::= 'FeatureAgglomeration' <affinity>
<affinity> ::= 'euclidean' <linkage_type0>| <affinity_options> <linkage_type1>
<affinity_options> ::= 'l1' | 'l2' | 'manhattan' | 'cosine'
<linkage_type0> ::= 'ward' | <linkage_type1>
<linkage_type1> ::= 'complete' | 'average'


<KernelApproximation> ::= 'RBFSampler' <gamma_kernelApprox> | 'Nystroem' <kernel_approx> <gamma_kernelApprox> <featuresToSelect>

<featuresToSelect> ::= 'RANDINT(1,100)'
<gamma_kernelApprox> ::= 'RANDFLOAT(0.000001,100.0)'
<kernel_approx> ::='rbf' | 'cosine' | 'chi2' | 'laplacian' | 'polynomial' | 'poly' | 'linear' | 'additive_chi2' | 'sigmoid'



<feature_construction> ::=   'PolynomialFeatures' | 'ZeroCount'


##Depend on the number of features = 2 to numbersOfFeatures-1:
<features> ::= 'RANDINT(2,3)' 
##Depend on the number of features = 1 to numbersOfFeatures-1:
<featuresToSelect> ::= 'RANDINT(1,3)'




<algorithm> ::= <strong> | <weak>
<strong> ::= <Trees> | <NaiveBayes> | <SVM>


<Trees> ::= 'DecisionTreeClassifier' | 'RandomForestClassifier' | <TreesOptions> <max_features>
<TreesOptions> ::= 'ExtraTreesClassifier' <criterion> | 'GradientBoostingClassifier' <learning_rate_gradient> 
<max_features> ::= 'RANDFLOAT(0.0,1.0)'
<criterion> ::= 'entropy' | 'gini'
<learning_rate_gradient> ::= 'RANDFLOAT(0.000001,1.0)'


<NaiveBayes> ::= 'GaussianNB' | <SpecificNB> <alpha>
<SpecificNB> ::= 'BernoulliNB' <binarize_data> | 'MultinomialNB'
<alpha> ::= 'RANDFLOAT(0.000001,100.0)' 
<binarize_data> ::= 'RANDFLOAT(0.000001,100.0)'


<SVM> ::= 'LinearSVC' <C_svm> <penalty>
<C_svm> ::= 'RANDFLOAT(0.0001,25.0)'
<penalty> ::= 'l1 False' | 'l2' <dual>
<dual> ::= 'True' | 'False'


<weak> ::= <nearest> | <logistic> | <passive>

<nearest> ::= 'KNeighborsClassifier' <k>  <weights> 
<k> ::= 'RANDINT(2,5)'
<weights> ::= 'uniform' | 'distance'


<passive> ::= 'PassiveAggressive ' <C_pa>  <loss_sgd>
<C_pa> ::= 'RANDFLOAT(0.0001,1.0)'
<loss_sgd> ::= 'hinge' | 'squared_hinge'

<logistic> ::= 'LogisticRegression'  <C_lr> <penalty>
<C_lr> ::= 'RANDFLOAT(0.0001,50.0)'

