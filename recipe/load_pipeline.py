# -*- coding: utf-8 -*-

"""
Copyright 2016 Walter Jos√©

This file is part of the RECIPE Algorithm.

The RECIPE is free software: you can redistribute it and/or
modify it under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your option)
any later version.

RECIPE is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. See http://www.gnu.org/licenses/.

"""

import load_method as load
from sklearn.ensemble import VotingClassifier

def load_pipeline(mlAlgorithm):

	"""Uses scikit-learn's make pipeline to generate a new pipeline to be evaluated.

	Parameters
	----------
	mlAlgorithm: string
		A string the contains the pipeline generated by the grammar based GP
	"""

	pipeline=[]
	algorithms=[]
	preprocess=[]

	start_alg = False
	steps_list = mlAlgorithm.strip().split('#')

	for steps in steps_list:
		if(start_alg):
			algorithms.append(steps)
		elif 'SA*' in steps:
			steps = steps.replace('SA*','').lstrip()
			start_alg = True
			algorithms.append(steps)
		else:
			preprocess.append(steps)

	# Placing preprocessors in the pipeline
	for pre in preprocess:
		method = load.load_method(pre)
		pipeline.append(method)

	for pos,alg in enumerate(algorithms[:-1]):
		method = load.load_method(alg)
		transf = VotingClassifier('alg'+str(pos),method)
		pipeline.append(transf)

	method=load.load_method(algorithms[-1])

	pipeline.append(method)

	return pipeline
